import React, { useState } from 'react';
import { MoreVertical, Calendar, Users, Paperclip, MessageSquare, GripVertical } from 'lucide-react';

const ProjectCard = ({ project, onEdit, onViewDetails }) => {
  const [isHovered, setIsHovered] = useState(false);

  const statusColors = {
    Planning: 'bg-blue-100 text-blue-800',
    WIP: 'bg-orange-100 text-orange-800',
    Done: 'bg-green-100 text-green-800',
    Cancelled: 'bg-red-100 text-red-800',
  };

  const priorityColors = {
    Low: 'bg-yellow-100 text-yellow-800',
    Medium: 'bg-orange-100 text-orange-800',
    High: 'bg-red-100 text-red-800',
  };

  return (
    <div 
      className="w-64 transition-all duration-300 ease-in-out"
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
    >
      {/* Status badge */}
      <div className="flex items-center mb-2">
        <span className={`${statusColors[project.status]} px-3 py-1 rounded-full text-sm font-medium`}>
          {project.status}
        </span>
        <span className="ml-2 text-gray-600">{project.statusCount}</span>
      </div>

      {/* Project card */}
      <div className={`bg-white rounded-lg shadow-md p-4 relative ${isHovered ? 'transform scale-105' : ''} transition-all duration-300 ease-in-out`}>
        {/* Drag handle */}
        <div className="absolute top-2 left-2 cursor-move opacity-50 hover:opacity-100 transition-opacity duration-300">
          <GripVertical size={16} />
        </div>

        <h3 className="font-bold text-lg mb-2 pl-6">{project.name}</h3>
        <div className="flex justify-between items-center mb-2">
          <span className="text-gray-500 text-sm flex items-center">
            <Calendar size={14} className="mr-1" />
            {project.date}
          </span>
          <img src={project.avatar} alt="User avatar" className="w-8 h-8 rounded-full" />
        </div>
        <div className="flex justify-between items-center mb-2">
          <span className={`${priorityColors[project.priority]} px-2 py-1 rounded-full text-xs font-medium`}>
            {project.priority}
          </span>
          <span className="text-sm font-medium">{project.completionRatio}</span>
        </div>

        {/* Additional project details */}
        <div className="flex justify-between text-gray-500 text-sm mt-3">
          <span className="flex items-center"><Users size={14} className="mr-1" />{project.teamSize}</span>
          <span className="flex items-center"><Paperclip size={14} className="mr-1" />{project.attachments}</span>
          <span className="flex items-center"><MessageSquare size={14} className="mr-1" />{project.comments}</span>
        </div>

        {/* Action buttons (visible on hover) */}
        <div className={`absolute right-2 top-2 transition-opacity duration-300 ${isHovered ? 'opacity-100' : 'opacity-0'}`}>
          <button onClick={() => onViewDetails(project)} className="p-1 hover:bg-gray-100 rounded-full mr-1">
            <MoreVertical size={16} />
          </button>
          <button onClick={() => onEdit(project)} className="p-1 hover:bg-gray-100 rounded-full">
            <span className="text-xs font-bold">Edit</span>
          </button>
        </div>
      </div>
    </div>
  );
};

// Example usage
const App = () => {
  const projectExample = {
    name: "Project 1 name",
    status: "Planning",
    statusCount: 2,
    date: "20/06/2024",
    priority: "Low",
    completionRatio: "0/7",
    avatar: "https://placekitten.com/100/100", // Placeholder image URL
    teamSize: 5,
    attachments: 3,
    comments: 12
  };

  const handleEdit = (project) => {
    console.log("Edit project:", project);
    // Implement edit functionality
  };

  const handleViewDetails = (project) => {
    console.log("View details for project:", project);
    // Implement view details functionality
  };

  return (
    <div className="p-4 bg-gray-100">
      <ProjectCard 
        project={projectExample} 
        onEdit={handleEdit}
        onViewDetails={handleViewDetails}
      />
    </div>
  );
};

export default App;
